# 
HOME			= .
RANDFILE		= $ENV::HOME/.rnd

oid_section		= new_oids

[ new_oids ]

tsa_policy1 = 1.2.3.4.1
tsa_policy2 = 1.2.3.4.5.6
tsa_policy3 = 1.2.3.4.5.7

####################################################################
[ ca ]
default_ca	= CA_default		# The default ca section

####################################################################
[ CA_default ]

dir		= ./ca		# Where everything is kept
certs		= $dir/certs		# Where the issued certs are kept
crl_dir		= $dir/crl		# Where the issued crl are kept
database	= $dir/index.txt	# database index file.
#unique_subject	= no			# Set to 'no' to allow creation of
					# several ctificates with same subject.
new_certs_dir	= $dir/certs		# default place for new certs.

certificate	= $dir/ca.crt 		# The CA certificate
serial		= $dir/serial 		# The current serial number
crlnumber	= $dir/crlnumber	# the current crl number
					# must be commented out to leave a V1 CRL
crl		= $dir/crl.pem 		# The current CRL
private_key	= $dir/ca.key           # The private key
RANDFILE	= $dir/.rand		# private random number file

x509_extensions	= usr_cert		# The extentions to add to the cert

# Comment out the following two lines for the "traditional"
# (and highly broken) format.
name_opt 	= ca_default		# Subject Name options
cert_opt 	= ca_default		# Certificate field options

# Extension copying option: use with caution.
# copy_extensions = copy

# Extensions to add to a CRL. Note: Netscape communicator chokes on V2 CRLs
# so this is commented out by default to leave a V1 CRL.
# crlnumber must also be commented out to leave a V1 CRL.
crl_extensions	= crl_ext

default_days	= 3650			# how long to certify for
default_crl_days= 30			# how long before next CRL
default_md	= default		# use public key default MD
preserve	= no			# keep passed DN ordering

# A few difference way of specifying how similar the request should look
# For type CA, the listed attributes must be the same, and the optional
# and supplied fields are just that :-)
policy		= policy_match

# For the CA policy
[ policy_match ]
countryName		= match
stateOrProvinceName	= match
organizationName	= match
organizationalUnitName	= optional
commonName		= supplied
emailAddress		= optional

# For the 'anything' policy
# At this point in time, you must list all acceptable 'object'
# types.
[ policy_anything ]
countryName		= optional
stateOrProvinceName	= optional
localityName		= optional
organizationName	= optional
organizationalUnitName	= optional
commonName		= supplied
emailAddress		= optional

####################################################################
[ req ]
default_bits		= 4096
default_keyfile 	= privkey.pem
distinguished_name	= req_distinguished_name
attributes		= req_attributes
# Default to usr_cert
x509_extensions         = usr_cert

string_mask = utf8only

# req_extensions = v3_req # The extensions to add to a certificate request

[ issuer_sect ]
C = MyCountryCode
ST = SomeState
L = SomeLocation
O = MyCompany
OU = MyUnit

[ req_distinguished_name ]
countryName			= Country Name (2 letter code)
countryName_default		= MyCountryCode
countryName_min			= 2
countryName_max			= 2

stateOrProvinceName		= State or Province Name (full name)
stateOrProvinceName_default	= MyState

localityName			= Locality Name (eg, city)
localityName_default		= MyLocality

0.organizationName		= Organization Name (eg, company)
0.organizationName_default	= MyCompany

organizationalUnitName		= Organizational Unit Name (eg, section)
organizationalUnitName_default	= MyUnit

commonName			= Common Name (e.g. server FQDN or YOUR name)
commonName_max			= 64
commonName_default		= MyCommonName

emailAddress			= Email Address
emailAddress_max		= 64

# SET-ex3			= SET extension number 3

[ req_attributes ]
challengePassword		= A challenge password
challengePassword_min		= 4
challengePassword_max		= 20

unstructuredName		= An optional company name


[ server_cert ]

# Server certificate for Web and OpenVPN servers

basicConstraints=CA:FALSE

keyUsage = critical, digitalSignature, keyEncipherment, dataEncipherment

extendedKeyUsage = serverAuth,clientAuth

nsComment			= "Server certificate"
nsCertType			= server

subjectKeyIdentifier=hash
authorityKeyIdentifier=keyid,issuer

[ usr_cert ]

# User sertificate for OpenVPN clients

basicConstraints=CA:FALSE
nsCertType = client
keyUsage = critical, digitalSignature, keyEncipherment, dataEncipherment
extendedKeyUsage = clientAuth

nsComment			= "Client certificate"

subjectKeyIdentifier=hash
authorityKeyIdentifier=keyid,issuer

[ v3_req ]

basicConstraints = CA:FALSE
keyUsage = nonRepudiation, digitalSignature, keyEncipherment

[ v3_ca ]

crlDistributionPoints=URI:http://MyCrlPoint/crl/ca.crl

subjectKeyIdentifier=hash

nsComment			= "CA"

basicConstraints = critical,CA:true

keyUsage = critical, cRLSign, keyCertSign

[ crldp1_section ]

fullname=URI:http://MyCrlPoint/crl/ca.crl
CRLissuer=dirName:issuer_sect
reasons=keyCompromise, CACompromise

[ crl_ext ]

authorityKeyIdentifier=keyid:always

